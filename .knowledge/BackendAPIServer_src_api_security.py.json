{"is_source_file": true, "format": "Python", "description": "This file provides security utilities for the API server, including password hashing, password verification, JWT token creation, and decoding.", "external_files": ["passlib.context", "jose.jwt", "jose.JWTError", "os", "datetime", "typing"], "external_methods": ["pwd_context.verify", "pwd_context.hash", "jwt.encode", "jwt.decode"], "published": ["verify_password", "get_password_hash", "create_access_token", "decode_access_token"], "classes": [], "methods": [{"name": "bool verify_password(plain_password: str, hashed_password: str)", "description": "Verify a plain password against hashed password.", "scope": "", "scopeKind": ""}, {"name": "str get_password_hash(password: str)", "description": "Hash password safely.", "scope": "", "scopeKind": ""}, {"name": "str create_access_token(data: dict, expires_delta: Optional[timedelta] = None)", "description": "Create JWT token for authentication.", "scope": "", "scopeKind": ""}, {"name": "decode_access_token(token: str)", "description": "Decode JWT token and return payload if valid.", "scope": "", "scopeKind": ""}], "calls": ["pwd_context.verify", "pwd_context.hash", "jwt.encode", "jwt.decode"], "search-terms": ["JWT", "password hashing", "security utilities", "auth tokens", "security.py"], "state": 2, "file_id": 8, "knowledge_revision": 18, "git_revision": "", "ctags": [{"_type": "tag", "name": "ACCESS_TOKEN_EXPIRE_MINUTES", "path": "/home/kavia/workspace/code-generation/to-do-list-c2fdd9f2/BackendAPIServer/src/api/security.py", "pattern": "/^ACCESS_TOKEN_EXPIRE_MINUTES = 60 * 24  # 1 day$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ALGORITHM", "path": "/home/kavia/workspace/code-generation/to-do-list-c2fdd9f2/BackendAPIServer/src/api/security.py", "pattern": "/^ALGORITHM = \"HS256\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SECRET_KEY", "path": "/home/kavia/workspace/code-generation/to-do-list-c2fdd9f2/BackendAPIServer/src/api/security.py", "pattern": "/^SECRET_KEY = os.getenv(\"SECRET_KEY\", \"change_this_secret\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create_access_token", "path": "/home/kavia/workspace/code-generation/to-do-list-c2fdd9f2/BackendAPIServer/src/api/security.py", "pattern": "/^def create_access_token(data: dict, expires_delta: Optional[timedelta] = None) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(data: dict, expires_delta: Optional[timedelta] = None)"}, {"_type": "tag", "name": "decode_access_token", "path": "/home/kavia/workspace/code-generation/to-do-list-c2fdd9f2/BackendAPIServer/src/api/security.py", "pattern": "/^def decode_access_token(token: str):$/", "language": "Python", "kind": "function", "signature": "(token: str)"}, {"_type": "tag", "name": "get_password_hash", "path": "/home/kavia/workspace/code-generation/to-do-list-c2fdd9f2/BackendAPIServer/src/api/security.py", "pattern": "/^def get_password_hash(password: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(password: str)"}, {"_type": "tag", "name": "pwd_context", "path": "/home/kavia/workspace/code-generation/to-do-list-c2fdd9f2/BackendAPIServer/src/api/security.py", "pattern": "/^pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "verify_password", "path": "/home/kavia/workspace/code-generation/to-do-list-c2fdd9f2/BackendAPIServer/src/api/security.py", "pattern": "/^def verify_password(plain_password: str, hashed_password: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(plain_password: str, hashed_password: str)"}], "hash": "dbe4afd9b67945cbb8a94fc3c55a77c6", "format-version": 4, "code-base-name": "BackendAPIServer", "filename": "BackendAPIServer/src/api/security.py", "fields": [{"name": "ACCESS_TOKEN_EXPIRE_MINUTES = 60 * 24  # 1 day", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ALGORITHM = \"HS256\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SECRET_KEY = os.getenv(\"SECRET_KEY\", \"change_this_secret\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"18": ""}]}