{"is_source_file": true, "format": "Python", "description": "This file defines API endpoints for user authentication, profile management, and task management in a to-do list application using FastAPI and SQLAlchemy. It includes route handlers for user registration, login, profile retrieval, and CRUD operations for tasks, all secured via dependencies.", "external_files": ["models", "db", "database_models", "security", "dependencies"], "external_methods": ["get_password_hash", "verify_password", "create_access_token", "get_session", "get_current_user"], "published": ["router"], "classes": [{"name": "User", "description": "Database model representing a user entity", "Task": "Database model representing a task entity"}], "methods": [{"name": "register_user(user_in: models.UserRegistration, db: AsyncSession = Depends(get_session))", "description": "Registers a new user after validating the uniqueness of username and email", "scope": "", "scopeKind": ""}, {"name": "login_user(user_in: models.UserLogin, db: AsyncSession = Depends(get_session))", "description": "Authenticates a user and issues a JWT token", "scope": "", "scopeKind": ""}, {"name": "get_my_profile(current_user: User = Depends(get_current_user))", "description": "Returns the profile details of the current authenticated user", "scope": "", "scopeKind": ""}, {"name": "create_task(task_in: models.TaskCreate, db: AsyncSession = Depends(get_session), current_user: User = Depends(get_current_user))", "description": "Creates a new task associated with the current user", "scope": "", "scopeKind": ""}, {"name": "list_tasks(db: AsyncSession = Depends(get_session), current_user: User = Depends(get_current_user))", "description": "Lists all tasks belonging to the current user", "scope": "", "scopeKind": ""}, {"name": "get_task(task_id: int, db: AsyncSession = Depends(get_session), current_user: User = Depends(get_current_user))", "description": "Retrieves details of a specific task owned by the current user", "scope": "", "scopeKind": ""}, {"name": "update_task( task_id: int, task_in: models.TaskUpdate, db: AsyncSession = Depends(get_session), current_user: User = Depends(get_current_user), )", "description": "Updates details of an existing task owned by the current user", "scope": "", "scopeKind": ""}, {"name": "delete_task(task_id: int, db: AsyncSession = Depends(get_session), current_user: User = Depends(get_current_user))", "description": "Deletes a task owned by the current user", "scope": "", "scopeKind": ""}], "calls": ["select", "db.execute", "db.add", "db.commit", "db.refresh", "db.delete"], "search-terms": ["FastAPI endpoint definitions", "task management API", "user authentication routes", "SQLAlchemy AsyncSession usage", "JWT token creation"], "state": 2, "file_id": 10, "knowledge_revision": 26, "git_revision": "d93954ff8d5afae01dd7ebfa2d5933660576b6e1", "revision_history": [{"22": "d93954ff8d5afae01dd7ebfa2d5933660576b6e1"}, {"26": "d93954ff8d5afae01dd7ebfa2d5933660576b6e1"}], "ctags": [{"_type": "tag", "name": "create_task", "path": "/home/kavia/workspace/code-generation/to-do-list-c2fdd9f2/BackendAPIServer/src/api/endpoints.py", "pattern": "/^async def create_task(task_in: models.TaskCreate, db: AsyncSession = Depends(get_session), curre/", "language": "Python", "kind": "function", "signature": "(task_in: models.TaskCreate, db: AsyncSession = Depends(get_session), current_user: User = Depends(get_current_user))"}, {"_type": "tag", "name": "delete_task", "path": "/home/kavia/workspace/code-generation/to-do-list-c2fdd9f2/BackendAPIServer/src/api/endpoints.py", "pattern": "/^async def delete_task(task_id: int, db: AsyncSession = Depends(get_session), current_user: User /", "language": "Python", "kind": "function", "signature": "(task_id: int, db: AsyncSession = Depends(get_session), current_user: User = Depends(get_current_user))"}, {"_type": "tag", "name": "get_my_profile", "path": "/home/kavia/workspace/code-generation/to-do-list-c2fdd9f2/BackendAPIServer/src/api/endpoints.py", "pattern": "/^async def get_my_profile(current_user: User = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(current_user: User = Depends(get_current_user))"}, {"_type": "tag", "name": "get_task", "path": "/home/kavia/workspace/code-generation/to-do-list-c2fdd9f2/BackendAPIServer/src/api/endpoints.py", "pattern": "/^async def get_task(task_id: int, db: AsyncSession = Depends(get_session), current_user: User = D/", "language": "Python", "kind": "function", "signature": "(task_id: int, db: AsyncSession = Depends(get_session), current_user: User = Depends(get_current_user))"}, {"_type": "tag", "name": "list_tasks", "path": "/home/kavia/workspace/code-generation/to-do-list-c2fdd9f2/BackendAPIServer/src/api/endpoints.py", "pattern": "/^async def list_tasks(db: AsyncSession = Depends(get_session), current_user: User = Depends(get_c/", "language": "Python", "kind": "function", "signature": "(db: AsyncSession = Depends(get_session), current_user: User = Depends(get_current_user))"}, {"_type": "tag", "name": "login_user", "path": "/home/kavia/workspace/code-generation/to-do-list-c2fdd9f2/BackendAPIServer/src/api/endpoints.py", "pattern": "/^async def login_user(user_in: models.UserLogin, db: AsyncSession = Depends(get_session)):$/", "language": "Python", "kind": "function", "signature": "(user_in: models.UserLogin, db: AsyncSession = Depends(get_session))"}, {"_type": "tag", "name": "register_user", "path": "/home/kavia/workspace/code-generation/to-do-list-c2fdd9f2/BackendAPIServer/src/api/endpoints.py", "pattern": "/^async def register_user(user_in: models.UserRegistration, db: AsyncSession = Depends(get_session/", "language": "Python", "kind": "function", "signature": "(user_in: models.UserRegistration, db: AsyncSession = Depends(get_session))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/to-do-list-c2fdd9f2/BackendAPIServer/src/api/endpoints.py", "pattern": "/^router = APIRouter()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_task", "path": "/home/kavia/workspace/code-generation/to-do-list-c2fdd9f2/BackendAPIServer/src/api/endpoints.py", "pattern": "/^async def update_task($/", "language": "Python", "kind": "function", "signature": "( task_id: int, task_in: models.TaskUpdate, db: AsyncSession = Depends(get_session), current_user: User = Depends(get_current_user), )"}], "hash": "9007db81e0c2860928efb116b6595391", "format-version": 4, "code-base-name": "BackendAPIServer", "filename": "BackendAPIServer/src/api/endpoints.py", "fields": [{"name": "router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}]}